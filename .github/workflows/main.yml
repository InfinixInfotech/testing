name: CI/CD Pipeline for Frontend

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    name: Build and Test
    runs-on: self-hosted  # Update to use your self-hosted runner

    steps:
      # Checkout code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Install dependencies
      - name: Install Dependencies
        run: npm install

      # Run tests
      - name: Run Tests
        run: npm test

      # Build the project
      - name: Build Project
        run: npm run build

      # Upload build artifacts (optional, useful if you want to store build files)
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact
          path: dist/

  deploy:
    name: Deploy to Docker
    runs-on: self-hosted  # Update to use your self-hosted runner
    needs: build

    steps:
      # Checkout code again
      - name: Checkout Code
        uses: actions/checkout@v3

      # Build Docker Image
      - name: Build Docker Image
        run: |
          # Build the Docker image locally and tag it as 'latest'
          docker build -t infinixmailboxfrontend:latest .

      # Deploy Docker Container
      - name: Deploy Docker Container
        run: |
          # Stop and remove any previous container if it exists
          docker stop infinixmailboxfrontend || true
          docker rm infinixmailboxfrontend || true

          # Run the new container on port 80 (accessible via local IP)
          docker run -d -p 80:80 --name infinixmailboxfrontend infinixmailboxfrontend:latest

          # Verify if the container is running
          docker ps
